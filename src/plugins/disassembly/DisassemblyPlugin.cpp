#include <PDView.h>
#include <stdlib.h>
#include <stdio.h>
#include <PDBackend.h>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct DissassemblyData
{
	PDUICustomView view;
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void drawCallback(void* userData, PDUIPainter* painter)
{
	PDUIPaint_fillRect(painter, 0, 0, 200, 200, 0);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void* createInstance(PDUI* uiFuncs, ServiceFunc* serviceFunc)
{
	(void)serviceFunc;
	DissassemblyData* userData = (DissassemblyData*)malloc(sizeof(DissassemblyData));
	
	userData->view = PDUICustomView_create(uiFuncs, userData, drawCallback);

	return userData;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static void destroyInstance(void* userData)
{
	free(userData);
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static int update(void*, PDUI*, PDReader*, PDWriter*)
{
	return 0;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

static PDViewPlugin plugin =
{
    0,    // version
    "Disassembly",
    createInstance,
    destroyInstance,
    update,
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern "C"
{

PD_EXPORT void InitPlugin(int version, ServiceFunc* serviceFunc, RegisterPlugin* registerPlugin)
{
	(void)version;
	(void)serviceFunc;
    registerPlugin(PD_VIEW_API_VERSION, &plugin);
}

}

